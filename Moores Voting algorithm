class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
         int count = 0;
        int candidate = 0;

        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }
            if(num==candidate) count += 1; 
            else count -= 1; 
        }

        return candidate;
     }
        
        // int count=0,c;
        // for(int i=0;i<nums.size();i++){
        //     for(int j=0;j<nums.size();j++){
        //         if(nums[i]==nums[j]){
        //             count++;
        //         }
        //     }
        //     if((count-1)>(nums.size()/2)){
        //         c=nums[i];
        //     }
        // }
        // return c;
        // unordered_map<int,int> umap;
        // int n=nums.size();
        // for(int i=0;i<nums.size();i++){
        //     umap[nums[i]]++;
        //     if(umap[nums[i]]>n/2){
        //         return nums[i];
        //     }
        // }
        // return 0;
    
};
