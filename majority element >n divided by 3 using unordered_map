class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        // int count=0,k=0;vector<int> c;
        // for(int i=0;i<nums.size();i++){
        //     for(int j=0;j<nums.size();j++){
        //         if(nums[i]==nums[j]){
        //             count++;
        //         }
        //     }
        //     if((count-1)>(nums.size()/3)){
        //         c[k++]=nums[i];
        //     }
        // }
        // return c;
        unordered_map<int,int> umap,ans;
        int n =nums.size();
        vector<int> vect;
        for(int i=0;i<n;i++){
            umap[nums[i]]++;
            
        }
        for(auto i : umap){
            if(i.second>n/3 ){
                     vect.push_back(i.first);
            }
        }
        // unordered_map<int,int> mp;
        // int n = nums.size();
        // for(int i=0;i<n;i++)
        // {
        //     mp[nums[i]]++;
        // }
        // vector<int>ret;
        // for(auto itr=mp.begin();itr != mp.end();itr++)
        // {
        //     if(itr->second > n/3)
        //     {
        //         ret.push_back(itr->first);
        //     }
        // }
        return vect;
    }
};
