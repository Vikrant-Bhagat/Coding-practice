class Solution {
public:
    bool binarysearch(int low,int high,int x,vector<vector<int>>& matrix){
        if(low<=high){
            int mid = ( low + high )/2;
                int m = matrix[0].size();
                if(matrix[mid/m][mid%m]==x){
                    return true;
                }
                else if(matrix[mid/m][mid%m]<x){
                    return  binarysearch(mid+1,high,x,matrix);
                }
                else if(matrix[mid/m][mid%m]>x){
                    return binarysearch(low,mid-1,x,matrix);
                }
                return false;
        }
        return false;
       
     }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
//         int m=matrix.size();
//         int n=matrix[0].size();
//         for(int i=0;i<m;i++){
//             for(int j=0;j<n;j++){
                
//                 if(matrix[i][j]==target){
//                     return true;
//                 }
//             }
//         }
//         return false;
        int m = matrix.size();
        int n = matrix[0].size();
        int ans = binarysearch(0,m*n-1,target,matrix);
        

        if(ans==1){
            return true;
        }
        else{
            return false;
        }
        
     }
};
