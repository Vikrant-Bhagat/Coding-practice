/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
#include<vector>
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
           ListNode* temp=head;
           vector<int> vect;
           int count=0;
           while(temp!=NULL){
               vect.push_back(temp->val);
               temp=temp->next;
           }
           ListNode* node;
           ListNode* ans=new ListNode();
           node=ans;
           int e_position=vect.size()-n;
           for(int i=0;i<vect.size();i++){
               if(i==e_position){
                   continue;
               }
               node->next=new ListNode(vect[i]);
               node=node->next;
           }
            return ans->next;
          
           
        
        
//         ListNode* start=new ListNode();
//         start->next=head;
//         ListNode* fast=start;
//         ListNode* slow=start;
        
//         for(int i=1;i<=n;i++){
//             fast=fast->next;
//         }
//         while(fast->next!=NULL){
//             slow=slow->next;
//             fast=fast->next;
//         }
//         slow->next=slow->next->next;
//         return head;
    }
};
